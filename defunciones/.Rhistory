main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ")
qqnorm(data$popularity, pch = 1, frame = FALSE)
qqline(data$popularity, col = "steelblue", lwd = 2)
lillie.test((data$popularity))
hist(data$budget
main = "Histograma para el presupuesto de las películas",
hist(data$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto")
hist(data$popularity,
main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ",
breaks = 105)
hist(data$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
```{r}
hist(data$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 500)
hist(data$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 500,
na.rm = TRUE)
View(data)
hist(data$popularity[data$popularity != 0],
main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ",
breaks = 105)
hist(data$budget[data$popularity != 0],
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 500)
hist(data$budget[data$popularity != 0],
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
hist(data$budget[data$popularity != 0],
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
nrow(data[data$budget == 0])
nrow(data[data$budget == 0])
ncol(data[data$budget == 0])
ncol(data[data$budget == 0,])
ncol(data[data$budget <10,])
ncol(data[data$budget <10,])
ncol(data[data$budget < 50,])
```{r}
ncol(data[data$budget < 50,])
nrow(data[data$budget = 0,])
nrow(data[data$budget == 0,])
hist(data$revenue,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
hist(data$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
qqnorm(data$popularity, pch = 1, frame = FALSE)
qqline(data$popularity, col = "steelblue", lwd = 2)
qqnorm(data$pruntime, pch = 1, frame = FALSE)
qqnorm(data$runtime, pch = 1, frame = FALSE)
qqline(data$runtime, col = "steelblue", lwd = 2)
lillie.test((data$runtime))
hist(data$runtime[data$runtime > 1],
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
qqnorm(data$runtime[data$runtime > 1], pch = 1, frame = FALSE)
qqline(data$runtime[data$runtime > 1], col = "steelblue", lwd = 2)
lillie.test((data$runtime))
lillie.test((data$runtime[data$runtime > 1]))
nrow(data$runtime[data$runtime > 1])
nrow(data[data$runtime > 1,])
lillie.test((data2$runtime))
knitr::opts_chunk$set(echo = TRUE)
library(nortest)
data <-read.csv("C:/Users/LENOVO/Desktop/Clases/Minería de datos/HT/HT1DataMining/data/tmdb-movies.csv")
summary(data)
str(data)
hist(data$popularity[data$popularity != 0],
main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ",
breaks = 105)
qqnorm(data$popularity, pch = 1, frame = FALSE)
qqline(data$popularity, col = "steelblue", lwd = 2)
lillie.test((data$popularity))
hist(data$budget[data$popularity != 0],
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
data2 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
qqnorm(data2$runtime, pch = 1, frame = FALSE)
qqline(data2$runtime, col = "steelblue", lwd = 2)
lillie.test((data2$runtime))
nrow(data[data$runtime > 1,])
data2 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
data2 = data[data$budget > 1000000]
data2 = data[data$budget > 1000000,]
data2 = data[data$budget > 1000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$runtime, pch = 1, frame = FALSE)
qqline(data2$runtime, col = "steelblue", lwd = 2)
* QQnormal: dado ese comportamiento y el sesgo que tienen los datos, se aplicó una gráfica de qqnorm.En la que se oberva que los extremos no se comportan de manera normal.
```{r }
qqnorm(data2$runtime, pch = 1, frame = FALSE)
qqline(data2$runtime, col = "steelblue", lwd = 2)
* QQnormal: dado ese comportamiento y el sesgo que tienen los datos, se aplicó una gráfica de qqnorm.En la que se oberva que los extremos no se comportan de manera normal.
```{r }
qqnorm(data2$runtime, pch = 1, frame = FALSE)
qqline(data2$runtime, col = "steelblue", lwd = 2)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
lillie.test((data2$budget))
* Test de Lilliefors: tenemos que el valor p es menor a 0.05 con lo que se confirma que la popularidad **No exibe un comportamiento normal**
data2 = data[data$runtime > 30,]
```{r}
knitr::opts_chunk$set(echo = TRUE)
library(nortest)
data <-read.csv("C:/Users/LENOVO/Desktop/Clases/Minería de datos/HT/HT1DataMining/data/tmdb-movies.csv")
summary(data)
str(data)
hist(data$popularity[data$popularity != 0],
main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ",
breaks = 105)
qqnorm(data$popularity, pch = 1, frame = FALSE)
qqline(data$popularity, col = "steelblue", lwd = 2)
lillie.test((data$popularity))
data2 = data[data$budget > 1000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
lillie.test((data2$budget))
data2 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
qqnorm(data2$runtime, pch = 1, frame = FALSE)
qqline(data2$runtime, col = "steelblue", lwd = 2)
qqnorm(data3$runtime, pch = 1, frame = FALSE)
data3 = data[data$runtime > 30,]
data3 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
qqnorm(data3$runtime, pch = 1, frame = FALSE)
qqline(data3$runtime, col = "steelblue", lwd = 2)
lillie.test((data3$runtime))
data2 = data[data$budget > 10000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
data2 = data[data$budget > 1000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
### Ganancias
Para el estudio de estos datos, se analizaron películas que hayan ganado más de $1,000,000 USD debido a que se detectaron 2 escalas distintas en el set de datos. Además de esto no se sabe si la escala fue cambiada alguna otra vez.
```{r}
data21 = data[data$revenue > 1000000,]
hist(data2$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 105)
```
data21 = data[data$revenue > 1000000,]
hist(data2$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 105)
data21 = data[data$revenue > 1000000,]
hist(data21$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 105)
View(data21)
hist(data21$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 100)
qqnorm(data21$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
qqnorm(data21$revenue, pch = 1, frame = FALSE)
qqline(data2$revenue, col = "steelblue", lwd = 2)
strsplit(data$genres,"|")
strsplit(data$genres," ")
strsplit(data$genres," | ")
strsplit(data$genres,"|")
strsplit(data$genres, split, fixed = FALSE, perl = FALSE, useBytes = FALSE)
strsplit(data$genres, "", fixed = FALSE, perl = FALSE, useBytes = FALSE)
strsplit(data$genres, "|", fixed = FALSE, perl = FALSE, useBytes = FALSE)
strsplit(data$genres, " ", fixed = FALSE, perl = FALSE, useBytes = FALSE)
```{r}
splitPopGenres <- c(movies$genres)
splitPopGenres <- c(data$genres)
splitPopGenres
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres
splitPopGenres <- table(splitPopGenres)
splitPopGenres
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
col3 <- brewer.pal(9,'Pastel1')
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', col=col3, las = 1)
barplot(splitPopGenres, horiz = TRUE, xlab = 'Frecuencia', main = ' Generos', las = 1)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos', las = 1)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos', )
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
splitPopGenres <- table(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
barplot(data$director, xlab = 'Frecuencia', main = ' Generos' )
barplot(directores, xlab = 'Frecuencia', main = ' Generos' )
directores = c(data$director)
directores <- unlist(directores)
directores <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' Generos' )
production_companies = c(data$production_companies)
production_companies <- unlist(directores)
production_companies <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' Compañias de producción' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(directores, xlab = 'Frecuencia', main = ' Compañias de producción' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
View(data)
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
data <- data[with(data,order(-"budget")),]
data5 <- data[with(data,order(-"budget")),]
data5 <- data[with(data,order("budget")),]
View(data5)
data5 <- data[order("budget"),]
View(data5)
View(data5)
data5 <- data[order(budget),]
data5 <- data[order("budget"),]
knitr::opts_chunk$set(echo = TRUE)
library(nortest)
data <-read.csv("C:/Users/LENOVO/Desktop/Clases/Minería de datos/HT/HT1DataMining/data/tmdb-movies.csv")
summary(data)
str(data)
hist(data$popularity[data$popularity != 0],
main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ",
breaks = 105)
qqnorm(data$popularity, pch = 1, frame = FALSE)
qqline(data$popularity, col = "steelblue", lwd = 2)
lillie.test((data$popularity))
data2 = data[data$budget > 1000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
lillie.test((data2$budget))
data21 = data[data$revenue > 1000000,]
hist(data21$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 100)
qqnorm(data21$revenue, pch = 1, frame = FALSE)
qqline(data2$revenue, col = "steelblue", lwd = 2)
data3 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
directores = c(data$director)
directores <- unlist(directores)
directores <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' directores' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
data5 <- data[order(-"budget"),]
data5 <- data[order(-budget),]
data5 <- data[order(-data$budget),]
tail(data5,10)
data5 <- data[order(data$budget),]
tail(data5,10)
tail(data5$original_title,10)
View(data5)
tail(data5$budget,10)
head(data5$budget,10)
head(data5$original_title,10)
data5 <- data[order(-data$budget),]
head(data5$original_title,10)
data6 <- data[order(-data$revenue),]
head(data6$original_title,10)
knitr::opts_chunk$set(echo = TRUE)
library(nortest)
data <-read.csv("C:/Users/LENOVO/Desktop/Clases/Minería de datos/HT/HT1DataMining/data/tmdb-movies.csv")
summary(data)
str(data)
hist(data$popularity[data$popularity != 0],
main = "Histograma sobre popularidad de películas en imdb",
xlab = "Indice de popularidad ",
breaks = 105)
qqnorm(data$popularity, pch = 1, frame = FALSE)
qqline(data$popularity, col = "steelblue", lwd = 2)
lillie.test((data$popularity))
data2 = data[data$budget > 1000000,]
hist(data2$budget,
main = "Histograma para el presupuesto de las películas",
xlab = "Presupuesto",
breaks = 105)
qqnorm(data2$budget, pch = 1, frame = FALSE)
qqline(data2$budget, col = "steelblue", lwd = 2)
lillie.test((data2$budget))
data21 = data[data$revenue > 1000000,]
hist(data21$budget,
main = "Histograma para las ganancias de las películas",
xlab = "Presupuesto",
breaks = 100)
qqnorm(data21$revenue, pch = 1, frame = FALSE)
qqline(data2$revenue, col = "steelblue", lwd = 2)
data3 = data[data$runtime > 30,]
hist(data2$runtime,
main = "Histograma para la duración de las películas",
xlab = "Tiempo (m)",
breaks = 105)
splitPopGenres <- c(data$genres)
splitPopGenres <- strsplit(splitPopGenres, "|", fixed = TRUE)
splitPopGenres <- unlist(splitPopGenres)
splitPopGenres <- table(splitPopGenres)
barplot(splitPopGenres, xlab = 'Frecuencia', main = ' Generos' )
directores = c(data$director)
directores <- unlist(directores)
directores <- table(directores)
barplot(directores, xlab = 'Frecuencia', main = ' directores' )
production_companies = c(data$production_companies)
production_companies <- unlist(production_companies)
production_companies <- table(production_companies)
barplot(production_companies, xlab = 'Frecuencia', main = ' Compañias de producción' )
splitcasts <- c(data$cast)
splitcasts <- strsplit(splitcasts, "|", fixed = TRUE)
splitcasts <- unlist(splitcasts)
splitcasts <- table(splitcasts)
barplot(splitcasts, xlab = 'Frecuencia', main = 'Actores' )
data5 <- data[order(-data$budget),]
head(data5$original_title,10)
data6 <- data[order(-data$revenue),]
head(data6$original_title,10)
install.packages("nbClust")
View(data)
View(data)
install.package(NbClust)
install.packages(NbClust)
install.packages("NbClust")
install.packages("e1071")
install.packages("cluster")
install.packages("mclust")
install.packages("mclust")
install.packages("fpc")
install.packages("factoextra")
library(haven)
library(foreign)
library(dplyr)
setwd("C:/Users/LENOVO/Desktop/Clases/Minería de datos/Github/ProyectoDataMining/defunciones")
Def2009 <- read_sav("defunciones2009.sav")
Def2010<- read_sav("defunciones2010.sav")
Def2011 <- read_sav("defunciones2011.sav")
Def2012 <- read_sav("defunciones2012.sav")
Def2013 <- read_sav("defunciones2013.sav")
Def2014 <- read_sav("defunciones2014.sav")
Def2015 <- read_sav("defunciones2015.sav")
Def2016 <- read_sav("defunciones2016.sav")
Def2017 <- read_sav("defunciones2017.sav")
Def2018 <- read_sav("defunciones2018.sav")
Def2019 <- read_sav("defunciones2019.sav")
names(Def2009) <- tolower(names(Def2009))
names(Def2009) <- tolower(names(Def2009))
names(Def2010)<- tolower(names(Def2010))
names(Def2011)<- tolower(names(Def2011))
names(Def2012)<- tolower(names(Def2012))
names(Def2013)<- tolower(names(Def2013))
names(Def2014)<- tolower(names(Def2014))
names(Def2015)<- tolower(names(Def2015))
names(Def2016)<- tolower(names(Def2016))
names(Def2017)<- tolower(names(Def2017))
names(Def2018)<- tolower(names(Def2018))
names(Def2019)<- tolower(names(Def2019))
Def2009$añoreg<- 09
Def2009$añoreg<- 09
Def2009$añoocu <- 09
Def2010$añoreg <- 10
Def2010$añoocu <-10
Def2011$añoreg<- 11
Def2011$añoocu <- 11
Def2012$añoreg <- 12
Def2012$añoocu <-12
Def2013$añoreg<- 13
Def2013$añoocu <- 13
Def2014$añoreg <- 14
Def2014$añoocu <-14
Def2015$añoreg<- 15
Def2015$añoocu <- 15
Def2016$añoreg <- 16
Def2016$añoocu <-16
Def2017$añoreg<- 17
Def2017$añoocu <- 17
Def2018$añoreg <- 18
Def2018$añoocu <-18
Def2019$añoreg<- 19
Def2019$añoocu <- 19
Def2009$escodif <- NA
Def2009$escodif <- NA
Def2012$añoocu <-2012
Def2013$añoocu <- 2013
Def2013$ocudif <- NA
names(Def2013)[names(Def2013)=="getdif"]<- "puedif"
Def2014$añoocu <- 2014
Def2015$añoreg <- 2015
Def2015$añoocu <-2015
Def2009z<-zap_labels(Def2009)
Def2010z<-zap_labels(Def2010)
Def2011z<-zap_labels(Def2011)
Def2012z<-zap_labels(Def2012)
Def2013z<-zap_labels(Def2013)
Def2014z<-zap_labels(Def2014)
Def2015z<-zap_labels(Def2015)
Def2016z<-zap_labels(Def2016)
Def2017z<-zap_labels(Def2017)
Def2018z<-zap_labels(Def2018)
Def2019z<-zap_labels(Def2019)
Def09_12 <-rbind(Def2009z,Def2010z,Def2011z)
Def09_12$pnadif <- NA
Def09_12$predif <- NA
Def09_12 <- rbind(Def09_12,Def2012z)
names(Def09_12)[names(Def09_12)=="getdif"]<- "puedif"
Def09_12$ciuodif <- NA
Def2013z$caudef.descrip <- NULL
Def09_13 <-rbind(Def09_12,Def2013z)
Def15_19 <- rbind(Def2014z,Def2015z)
Def15_19 <- rbind(Def15_19,Def2016z,Def2017z)
Def2019z$areag <-NA
Def2018z$areag <-NA
Def15_19 <- rbind(Def15_19,Def2018z,Def2019z)
Def15_19$ocudif <- NA
Defunciones <- rbind(Def09_13,Def15_19)
##
write.csv(Defunciones,"Defunciones.csv",row.names = FALSE)
